import type { PostgresRecordModel } from 'from-schema';

export const cloudflareVideoDoc = {
	properties: {
		id: { type: 'bigint', primaryKey: true },
		allowedOrigins: {
			type: 'array',
			items: { type: 'text' },
		},
		created: { type: 'timestamp' },
		duration: { type: 'double precision' },
		width: { type: 'integer' },
		height: { type: 'integer' },
		// meta: {
		// 	type: 'object',
		// 	properties: {}
		// },
		modified: { type: 'timestamp' },
		preview: { type: 'text' },
		readyToStream: { type: 'boolean' },
		requireSignedURLs: { type: 'boolean' },
		size: { type: 'integer' },
		state: { type: 'text' },
		pctComplete: { type: 'text' },
		errorReasonCode: { type: 'text' },
		errorReasonText: { type: 'text' },
		thumbnail: { type: 'text' },
		thumbnailTimestampPct: { type: 'double precision' },
		creator: { type: 'text' },
		uploaded: { type: 'timestamp' },
		uid: { type: 'varchar', maxLength: 32, pattern: '^[a-f0-9]{32}$' },
		author: { type: 'bigint' },
		post: { type: 'bigint' },
	},
	required: [
		'author',
		'supertype',
		'width',
		'height',
		'state',
		'pctComplete',
		'errorReasonCode',
		'errorReasonText',
		'hls',
		'dash',
		'allowedOrigins',
		'created',
		'duration',
		'input',
		'maxDurationSeconds',
		'meta',
		'modified',
		'uploadExpiry',
		'playback',
		'preview',
		'readyToStream',
		'requireSignedURLs',
		'size',
		'status',
		'thumbnail',
		'thumbnailTimestampPct',
		'creator',
		'uid',
		'id',
		'uploaded',
	],
} as const satisfies PostgresRecordModel;
// console.log('videoDoc', videoDoc);

apiVersion: v1
kind: Namespace
metadata:
  name: nats
  labels:
    name: nats
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nats-config
  namespace: nats
data:
  nats.conf: |
    # NATS Server Configuration

    # Server name required for JetStream
    server_name: nats-server

    # Network
    host: 0.0.0.0
    port: 4222

    # HTTP monitoring port
    http_port: 8222

    # Logging
    debug: false
    trace: false

    # Limits
    max_connections: 64K
    max_control_line: 4KB
    max_payload: 1MB
    max_pending: 64MB

    # Jetstream (for persistent messaging) - standalone mode
    jetstream {
      store_dir: /data/jetstream
      max_memory_store: 1GB
      max_file_store: 10GB
    }

    # Authorization disabled for debugging
    # authorization {
    #   users: [
    #     {
    #       user: admin
    #       password: "++mC3VSZLtSNrqrMU8/Dme9lfdWiwgk7aTUG45EyXaQ="
    #       permissions: {
    #         publish: ">"
    #         subscribe: ">"
    #       }
    #     }
    #     {
    #       user: lyku
    #       password: "LykuNatsSecure2025Key"
    #       permissions: {
    #         publish: ">"
    #         subscribe: ">"
    #       }
    #     }
    #   ]
    # }
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: nats
  namespace: nats
  labels:
    app: nats
spec:
  serviceName: nats
  replicas: 1
  selector:
    matchLabels:
      app: nats
  template:
    metadata:
      labels:
        app: nats
    spec:
      containers:
        - name: nats
          image: nats:2.10-alpine
          ports:
            - containerPort: 4222
              name: client
            - containerPort: 8222
              name: monitoring
          volumeMounts:
            - name: config-volume
              mountPath: /etc/nats
            - name: data-volume
              mountPath: /data
          command:
            - nats-server
            - -c
            - /etc/nats/nats.conf
          resources:
            requests:
              memory: '256Mi'
              cpu: '100m'
            limits:
              memory: '512Mi'
              cpu: '500m'
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8222
            initialDelaySeconds: 10
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8222
            initialDelaySeconds: 5
            periodSeconds: 10
      volumes:
        - name: config-volume
          configMap:
            name: nats-config
  volumeClaimTemplates:
    - metadata:
        name: data-volume
      spec:
        accessModes: ['ReadWriteOnce']
        resources:
          requests:
            storage: 10Gi
---
apiVersion: v1
kind: Service
metadata:
  name: nats
  namespace: nats
  labels:
    app: nats
spec:
  selector:
    app: nats
  ports:
    - name: client
      port: 4222
      targetPort: 4222
    - name: monitoring
      port: 8222
      targetPort: 8222
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: nats-monitoring
  namespace: nats
  labels:
    app: nats
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/port: '8222'
    prometheus.io/path: '/metrics'
spec:
  selector:
    app: nats
  ports:
    - name: monitoring
      port: 8222
      targetPort: 8222
  type: ClusterIP

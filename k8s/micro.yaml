apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${SERVICE_NAME}
  labels:
    app: ${SERVICE_NAME}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ${SERVICE_NAME}
  template:
    metadata:
      labels:
        app: ${SERVICE_NAME}
    spec:
      imagePullSecrets:
        - name: lyku
      containers:
        - name: ${SERVICE_NAME}
          image: registry.digitalocean.com/lyku/lyku:${SERVICE_NAME}
          imagePullPolicy: IfNotPresent
          command: ['bun']
          args:
            - './serve.js'
          envFrom:
            - secretRef:
                name: doppler-token-secret
          env:
            - name: NODE_ENV
              value: 'production'
            - name: BUN_LOG_LEVEL
              value: 'debug'
            - name: BUN_FORCE_TTY
              value: '1'
            - name: FORCE_COLOR
              value: '1'
          ports:
            - containerPort: 3000
          resources:
            requests:
              memory: '160Mi'
              cpu: '5m'
            limits:
              memory: '200Mi'
              cpu: '20m'
          startupProbe:
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 10
            periodSeconds: 5
            failureThreshold: 30
          livenessProbe:
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 15
            periodSeconds: 20
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 15
            periodSeconds: 20
---
apiVersion: v1
kind: Service
metadata:
  name: ${SERVICE_NAME}-service
spec:
  selector:
    app: ${SERVICE_NAME}
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
  type: ClusterIP
---
apiVersion: v1
kind: Secret
metadata:
  name: lyku
  namespace: kube-system
  annotations:
    digitalocean.com/dosecret-identifier: lyku
type: kubernetes.io/dockerconfigjson
# data:
#   .dockerconfigjson: ${DOCKER_CREDENTIALS}
